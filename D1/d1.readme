Fornisci una risposta alle seguenti domande. Troverai le risposte corrette in fondo!

Cos’è ReactJS? (risposta aperta)
ReactJS è una libreria per la creazione per le interfacce utente

ReactJS è un framework, non una libreria. (v/f)
falso

Il file package.json contiene…

--Molte informazioni utili, come ad esempio l’elenco di tutte le dipendenze richieste dall’applicazione 

create-react-app è l’unico modo possibile per creare un’applicazione React (v/f)
falso

Qual è il comando da lanciare nel terminale per creare una nuova create-react-app con nome “test”?
npx create-react-app test 

Cos’è un componente React?

Un blocco di logica/contenuto riutilizzabile all’interno dell’applicazione


Un componente React può venire creato in tre modi: come funzione, classe o interfaccia. (v/f)
falso

Qual è la differenza tra componenti creati come funzione e componenti creati come classe?
I componenti creati come funzione sono più semplici da scrivere ma con meno funzionalità, mentre i componenti creati come classe necessitano in genere di un maggior numero di linee di codice ma possiedono più funzionalità.


Le props sono frammenti di informazione assegnati all’invocazione di un componente React, utili al fine di rendere il componente dinamico e più riutilizzabile. (v/f)
vero

Le props possono essere passate solamente da un componente genitore ad un componente figlio, non è possibile fare il contrario (v/f)
vero

Da dove possono venire recuperate le props all’interno di un componente React creato come classe?

Possono essere recuperate all’interno dello oggetto ‘this’, dentro un sotto-oggetto chiamato ‘props’
